ls //현재 디렉토리의 파일 목록을 출력하는 명령어. 'ls -l'은 자세히 보기(-l : 파라미터,옵션)
ls -a //모든 파일과 디텍토리, 숨긴 파일과 디렉토리(.으로 시작)들을 출력
ls -al //ls -l + ls -a
ls -alS //파일 사이즈에 따라서 정렬
pwd //현재 위치하고 있는 디렉토리를 알려주는 명령어

mkdir //디렉토리 생성(mkdir 새로 생성할 디렉토리명)
mkdir -p //부모디렉터리를 생성하고 자식디렉터리를 생성(mkdir -p d1/d2/d3/d4)
touch //빈파일 생성(touch 파일명)

맨 앞글자 의미
-rw-rw-r-- 1 j j    0  1월 18 12:59 empty_file.txt (-r:파일)
drwxrwxr-x 2 j j 4096  1월 18 12:43 hellolinux     (d:디렉토리)

cd //경로 이동(cd 이동할 디렉토리의 경로명)
tab키 //자동완성

상대경로와 절대경로
상대경로는 현재 디렉토리의 위치를 기준으로 다른 디렉토리의 위치를 표현하는 것으로 ..은 부모 디렉토리를 의미합니다. 'cd ..'은 현재 디렉토리의 부모 디렉토리로 이동하는 명령이 됩니다. 참고로 현재 디렉토리는 '.' 입니다. 
절대경로는 최상위 디렉토리를 기준으로 경로를 표현하는 것을 의미합니다. 최상위 디렉토리는 루트(root) 디렉토리라고 하고 '/' 입니다. 'cd /'는 최상위 디렉토리로 이동한다는 뜻입니다. 'cd /home/egoing'은 현재 디렉토리가 무엇이건 언제나 '/home/egoing'을 의미하는데 이런 식의 경로 표현을 절대경로라고 합니다. 

rm 파일명 //파일삭제(디렉토리 삭제x)
rm -r 디렉토리,파일명 //디렉토리, 파일 삭제(그안에 있는 디렉토리, 파일도 삭제)
rm -rf //묻지도 따지지도 않고 삭제

--help //명령어 뒤에 --help를 붙이면 명령의 사용설명서가 출력됩니다.
       //화면을 빠져 나가지 않고 간단한 메뉴얼을 출력
예) 
ls --help
rm --help
mkdir --help
pwd --help

man //man 뒤에 명령어를 붙이면 명령의 사용설명서가 출력됩니다.
    //전용 페이지로 이동해서 상세한 메뉴얼을 보여준다, 원하는 단어로 검색 : /단어, 나가기 : q
예) 
man ls 
man rm 
man mkdir
man pwd 

nano, vi //파일편집 

apt //패키지매니저(앱스토어비슷한 의미)
#apt-get update; //최신 상태의 패키지 목록으로 갱신
#apt-cache search 패키지 //설치하고 싶은 패키지 검색
#apt-get install 패키지 //패키지 다운로드
top, htop //현재 실행중인 프로그램 목록을 보여주는 패키지 
#apt-get upgrade 패키지 //패키지 업그레이드
#apt-get upgrade //apt-get을 통해서 다운받은 모든 패키지들을 최신버전으로 업그레이드
#apt-get remove 패키지 //패키지 삭제

wget -O 저장하고싶은파일의이름 url주소 //wget이라는 프로그램을 통해서 파일,이미지를 다운로드해서 원하는 이름으로 저장

git clone 오픈소스다운로드주소 디렉토리이름 //git이라는 프로그램을 통해서 github에 있는 오픈소스를 원하는 디렉토리에 다운로드 받기

mkdir why;cd why //why라는 디렉토리 생성후 why디렉토리로 이동 

cat 파일명 //파일의 내용 확인

grep 찾고싶은단어 파일명 //파일에서 원하는 단어 검색(어떤 특정한 정보에서 원하는 정보가 포함되어 있는 행을 찾아주는 명령어)
ex)grep linux linux.txt
ls --help | grep sort //ls명령어 도움말에서 sort라는 단어 검색(파이프라인)

ps aux //현재 실행되고있는 프로그램 리스트 출력

>(Redirection)
ls -l > result.txt //result.txt라는 파일안에 ls -l의 내용이 저장된다.
rm linux.txt 1> result.txt 2> error.log //standard output이면 result.txt에 저장되고 standard error이면 error.log에 저장된다.
//standard input은 rm linux.txt
ls -al >> result.txt //reuslt.txt에 있는 원래 파일내용에 ls -al의 내용이 추가된다.

shell vs kernel
shell(bash,zsh)에서 사용자가 입력한 명령어들을 해석해서 kernel에 전달
kernel이라고 하는 프로그램은 하드웨어를 직접적으로 제어하는 운영체제에서 가장 중심이되는 코어 역할

echo "hello" //hello라는 문자를 화면에 출력
echo $0 //현제 어떤 shell을 쓰는지 알려줌
