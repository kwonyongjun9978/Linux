ls //현재 디렉토리의 파일 목록을 출력하는 명령어. 'ls -l'은 자세히 보기(-l : 파라미터,옵션)
ls -a //모든 파일과 디텍토리, 숨긴 파일과 디렉토리(.으로 시작)들을 출력
ls -al //ls -l + ls -a
ls -alS //파일 사이즈에 따라서 정렬
==========================================================================================================================================================================================================================
mkdir //디렉토리 생성(mkdir 새로 생성할 디렉토리명)
mkdir -p //부모디렉터리를 생성하고 자식디렉터리를 생성(mkdir -p d1/d2/d3/d4)
touch //빈파일 생성(touch 파일명)
touch test{1..10} //test1부터 test10까지 총10개의 빈파일 생성
==========================================================================================================================================================================================================================
맨 앞글자 의미
-rw-rw-r-- 1 j j    0  1월 18 12:59 empty_file.txt (-:파일)
drwxrwxr-x 2 j j 4096  1월 18 12:43 hellolinux     (d:디렉토리)
==========================================================================================================================================================================================================================
pwd //현재 위치하고 있는 디렉토리를 알려주는 명령어
cd //경로 이동(cd 이동할 디렉토리의 경로명)
tab키 //자동완성

상대경로와 절대경로
상대경로는 현재 디렉토리의 위치를 기준으로 다른 디렉토리의 위치를 표현하는 것으로 ..은 부모 디렉토리를 의미합니다. 'cd ..'은 현재 디렉토리의 부모 디렉토리로 이동하는 명령이 됩니다. 참고로 현재 디렉토리는 '.' 입니다. 
절대경로는 최상위 디렉토리를 기준으로 경로를 표현하는 것을 의미합니다. 최상위 디렉토리는 루트(root) 디렉토리라고 하고 '/' 입니다. 'cd /'는 최상위 디렉토리로 이동한다는 뜻입니다. 'cd /home/egoing'은 현재 디렉토리가 무엇이건 언제나 '/home/egoing'을 의미하는데 이런 식의 경로 표현을 절대경로라고 합니다. 
==========================================================================================================================================================================================================================
echo "hello" //hello라는 문자를 화면에 출력
echo "hello" > perm.txt //perm.txt라는 파일 "hello"가 저장된다.
echo $0 //현제 어떤 shell을 쓰는지 알려줌
echo $HOME = echo ~ //나의 집은 어디인가?
~ : HOME Directory
==========================================================================================================================================================================================================================
rm 파일명 //파일삭제(디렉토리 삭제x)
rm -r 디렉토리,파일명 //디렉토리, 파일 삭제(그안에 있는 디렉토리, 파일도 삭제)
rm -rf //묻지도 따지지도 않고 삭제
==========================================================================================================================================================================================================================
--help //명령어 뒤에 --help를 붙이면 명령의 사용설명서가 출력됩니다.
       //화면을 빠져 나가지 않고 간단한 메뉴얼을 출력
예) 
ls --help
rm --help
mkdir --help
pwd --help

man //man 뒤에 명령어를 붙이면 명령의 사용설명서가 출력됩니다.
    //전용 페이지로 이동해서 상세한 메뉴얼을 보여준다, 원하는 단어로 검색 : /단어, 나가기 : q
예) 
man ls 
man rm 
man mkdir
man pwd 
==========================================================================================================================================================================================================================
nano, vi //파일편집 
==========================================================================================================================================================================================================================
apt : 패키지매니저(앱스토어비슷한 의미)
#apt-get update; //최신 상태의 패키지 목록으로 갱신
#apt-cache search 패키지 //설치하고 싶은 패키지 검색
#apt-get install 패키지 //패키지 다운로드 
#apt-get upgrade 패키지 //패키지 업그레이드
#apt-get upgrade //apt-get을 통해서 다운받은 모든 패키지들을 최신버전으로 업그레이드
#apt-get remove 패키지 //패키지 삭제
#apt-get purge 패키지 //패키지 삭제뿐만 아니라 패키지에 설정해둔 설정파일까지 삭제
==========================================================================================================================================================================================================================
wget -O 저장하고싶은파일의이름 url주소 //wget이라는 프로그램을 통해서 파일,이미지를 다운로드해서 원하는 이름으로 저장

git clone 오픈소스다운로드주소 디렉토리이름 //git이라는 프로그램을 통해서 github에 있는 오픈소스를 원하는 디렉토리에 다운로드 받기
==========================================================================================================================================================================================================================
mkdir why;cd why //why라는 디렉토리 생성후 why디렉토리로 이동 
==========================================================================================================================================================================================================================
cat 파일명 //파일의 내용 확인
==========================================================================================================================================================================================================================
grep 찾고싶은단어 파일명 //파일에서 원하는 단어 검색(어떤 특정한 정보에서 원하는 정보가 포함되어 있는 행을 찾아주는 명령어)
ex)grep linux linux.txt
ls --help | grep sort //ls명령어 도움말에서 sort라는 단어 검색(파이프라인)
==========================================================================================================================================================================================================================
ps aux //현재 실행되고있는 프로그램 리스트 출력
top, htop //현재 실행중인 프로그램 목록을 보여주는 패키지
==========================================================================================================================================================================================================================
>(Redirection)
ls -l > result.txt //result.txt라는 파일안에 ls -l의 내용이 저장된다.
rm linux.txt 1> result.txt 2> error.log //standard output이면 result.txt에 저장되고 standard error이면 error.log에 저장된다.
					//standard input은 rm linux.txt
ls -al >> result.txt //reuslt.txt에 있는 원래 파일내용에 ls -al의 내용이 추가된다.
==========================================================================================================================================================================================================================
shell vs kernel
shell(bash,zsh)에서 사용자가 입력한 명령어들을 해석해서 kernel에 전달
kernel이라고 하는 프로그램은 하드웨어를 직접적으로 제어하는 운영체제에서 가장 중심이되는 코어 역할
==========================================================================================================================================================================================================================
cp(복사하기)
cp *.log bak //모든 log형식의 파일들을 bak에 복사
==========================================================================================================================================================================================================================
쉘스크립트
#!/bin/bash
if ! [ -d bak ]; then  
		mkdir bak
fi
cp *.log bak
//만약에 bak라는 디렉토리가 없다면 bak디렉토리를 만들어주고 현재 디렉토리에 있는 모든 log형식의 파일들을 bak 디렉토리로 복사
==========================================================================================================================================================================================================================
/bin(bin디렉토리) : (일반)사용자들이 사용하는 명령들이 파일의 형태로 존재(실행 파일 모음) = /usr/bin
/sbin(sbin디렉토리) : 관리자(root)들이 사용하는 명령들이 파일의 형태로 존재
/etc(etc디렉토리) : (프로그램이 동작하는 방법)설정 파일 모음
/dev(dev디텍토리) : 장치 파일 모음
/var(var디텍토리) : 가변 디렉토리
/tmp(tmp디렉토리) : 임시 파일들이 저장되는 디텍토리
/home(home디렉토리) : 일반 사용자의 기본 HOME = cd, cd ~
==========================================================================================================================================================================================================================
process : 실행되고있는 상태의 프로그램
storage = ssd, hdd (가격이 낮다, 용량이 크다, 속도가 느리다)
memory = ram 
processor = cpu
명령어가 컴퓨터상에 존재하는 방식 = 프로그램(bin이나 sbin디렉토리 내의 파일들), 프로그램은 storage에 저장되어있음, storage에 저장되어있던것이 실제로 실행이 되면 메모리에 적재가 되서 porcessor에 의해서 처리가 된다.
==========================================================================================================================================================================================================================
파일의 용도
데이터보관, 실행파일(명령을보관)

파일찾는법
locate 파일명 
find 파일명
whereis 파일명(실행파일)
==========================================================================================================================================================================================================================
background 실행
Ctrl + z : 실행중인 프로그램을 백그라운드로 보내는 단축키. 이 기능을 실행하면 명령어가 일시 정지 됩니다.
jobs //백그라운드 작업들의 목록을 보여준다.
fg //백그라운드로 된 프로그램을 다시 실행 
kill 실행중인프로그램 //실행중인 프로그램을 끈다.
&가 명령어 뒤에 붙으면 명령어가 실행될 때 백그라운드로 실행됩니다. 
    ex) ls -alR / > result.txt 2> error.log &
		
Daemon : 백그라운드로 실행되는 서비스 프로그램	
/etc/init.d/ : daemon프로그램들이 위치하는 디렉토리

#service apache2 start //apache2프로그램 실행
#service apache2 stop //apache2프로그램 멈춤
========================================================================================================================================================================================================================== 
cron : 특정 시간 마다 어떤 작업을 자동으로 수행하게 해주고 싶을 때 사용하는 명령어
m(inute)  h(our)  dom(day of month)  mon(th)  dow(day of weekend)  command
ex)
crontab -e 
1/* * * * * date >> date.log //1분마다 date.log에 date를 추가
tail -f date.log //date.log파일의 재일 뒤쪽에 있는 text를 자동으로 refresh하면서 출력해준다.
==========================================================================================================================================================================================================================
Startup script bashrc
.bashrc 파일을 수정(alias설정, $PATH값 변경, 프롬프트 정보 변경 등) 
==========================================================================================================================================================================================================================
id //나는 누구인가?
who //접속자 확인(로그인 정보, 누구누구가 접속해있지?)

sudo passwd -u root //관리자 모드 잠금해제
sudo passwd -l root //관리자 모드 잠금

sudo useradd -m username //홈디렉토리에 일반사용자 생성
sudo passwd username -> 패스워드 입력 //일반사용자 생성 후 비밀번호 세팅
sudo usermod -a -G sudo username // sudo 명령어 권한 부여
==========================================================================================================================================================================================================================
Permission(Read(r) & Write(w) & Excute(x))

-rw-rw-r-- 1 kwon kwon 0  1월 25 22:20 perm.txt
- //파일
rw-rw-r-- //access mode 
: rw- //owner의 권한(u)
  rw- //group의 권한(g)
  r-- //other의 권한(o)
kwon //owner
kwon /group

chmod o-r perm.txt //otehr의 perm.txt파일에 대한 read권한을 제거 
chmod u+r perm.txt //owner의 perm.txt파일에 대한 read권한을 부여 

디렉토리에 read권한이 없다면 디텍토리안에 있는 내용을 볼수 없다 (ls -l directory)X
디렉토리에 write권한이 없다면 디텍토리안에 파일 생성,(이름)변경,삭제 불가능
디렉토리에 excute권한이 없다면 디텍토리안에 들어갈수 없다 (cd directory)X
chmod -R o+w perm //perm이라는 디텍토리 안의 모든 파일들을 other가 write할수 있는 권한 추가

r:4, w:2, x:1
chmod 773 perm.txt //-rwxrwx-wx 1 kwon kwon 0  1월 25 22:20 perm.txt
chmod a+r perm.txt //owner,group,other에게 perm.txt의 read 권한을 부여
chmod a=rwx perm.txt //owner,group,other에게 perm.txt의 read,write,excute 권한을 부여

sudo groupadd group이름 //group추가
/etc/group //group에대한 정보를 가지고 있는 파일
sudo usermod -a -G group이름 user이름 //group의 맴버로 만들기
sudo chown 현재group이름:변경할group이름 . //현재 디렉토리의 group을 변경
chmod g+w . //group의 현재디렉토리에 대한 write권한 부여
==========================================================================================================================================================================================================================
google서버에 접속하기
1. 리눅스에서 ping google.com 입력후 아이피주소를 통해서 접속
2. 웹브라우저에서 domain name(google.com)으로 접속 //domain name(google.com)을 입력하면 DNS server로 이동하여 해당 domain에 대한 ip주소를 받아 접속하게 된다.

자신의 ip주소 확인
1. ip addr //private ip address
2. curl ipinfo.io/ip ,웹브라우저에서 https://ipinfo.io/ip 입력 //public ip address
==========================================================================================================================================================================================================================
Web server(apache2)
elinks http://private ip address/ //shell에서 직접 자신의web server에 접속하기
private ip address, localhost(domain name) = 127.0.0.1, 10.0.2.15/24 
nano /etc/apache2/sites-enabled/000-default.conf -> /var/www/html(=DocumentRoot) -> index.html
						   /var/log/apache2 -> access.log
==========================================================================================================================================================================================================================
SSH(원격제어)
ssh 원격제어 하고자 하는 사용자 컴퓨터 이름(kwon)@ip주소(127.0.0.1) //원격으로 원격제어 하고자 하는 컴퓨터에 접속
==========================================================================================================================================================================================================================
port(-p)
web : 80
ssh : 22
sudo nano /etc/ssh/sshd_config //ssh의 포트번호 확인,변경
포트 번호를 변경하는이유 : 컴퓨터를 원격으로 제어하는 행위는 보안상 노출에 취약함으로 ssh원격제어시 22번 포트 말고 다른 포트로 변경하여 사용할수있다.
==========================================================================================================================================================================================================================
Domain 
1. host 파일에서 ip 주소를 확인(nano /etc/hosts)
2. DNS서버에서 ip주소를 확인(nano /etc/resolv.conf) 
dig +trace 도메인 네임 //도메인 네임의 DNS 서버를 통한 IP 주소 확인 경로 추적
==========================================================================================================================================================================================================================
rsync(동기화)
rsync -a src dest //dest디렉토리안에 src디렉토리가 생성된다.
rsync -a src/ dest //dest디렉토리안에 src디렉토리안에 있던 파일들이 생성된다.
rsync -av src/ dest //dest디렉토리안에 src디렉토리안에 있던 파일들중 새롭게 추가된 파일이 생성된다.
ex)dest디렉토리 안에는 test1부터 test9까지 파일이 존재하는데 src디렉토리에는 test1 부터 test10까지의 파일이 존재한다 치면 
   dest디렉토리에 test10파일이 생성된다.
rsync -azP ~/rsync/src/ 이름@ip:~/rsync/dest //홈디렉토리(~)밑에 있는 rsync디렉토리, 밑에 있는 src 디렉토리안에 있는 파일들을 압축해서 다른 사용자 컴퓨터의 홈디렉토리밑에 있는 rsync디렉토리, 밑에 있는 dest디렉토리에 동기화시킨다.
==========================================================================================================================================================================================================================
로그인 시 ID/PW 를 입력하지 않지만, 보다 안전하게 자동으로 로그인하는 방법

SSH 공개키, 비공개키를 이용한 로그인 방식

SSH 키 생성 명령어
ssh-keygen
.ssh/id_rsa
숨겨진 디렉토리 ssh/id_rsa 에 공개키와 비공개키 파일이 생성된다.
이 키 파일은 랜덤하게 생성된 매우 강력한 비밀번호 파일이다.
id_rsa 파일과 id_rsa.pub 파일이 생성된 보안 키 파일
id_rsa.pub 파일명 중 pub는 public을 의미하며, 공개키(ssh public key)
id_rsa 파일은 비공개키, 사설키(ssh private key)
ssh private key vs ssh public key
이중 비공개키인 id_rsa 파일은 어느 누구에게도, 절대로 노출되면 안 되는 키이다.

공개키 파일 안에 있는 내용을 로그인하고자 하는 컴퓨터의.ssh/authorized_keys 파일에 추가.
명령어는 ssh-copy-id egoing@192.168.0.67 (egoing@192.168.0.67은 로그인하고자 하는 컴퓨터)

로그인하고자 하는 컴퓨터에 id_rsa_pub 공개키 파일을 저장하면, 비공개키를 가진 컴퓨터에서 공개키를 가진 로그인하고자 하는 컴퓨터에 ID/PW 입력 없이 자동으로 로그인 가능하다.
접속 명령어는 ssh egoing@192.168.0.67

그렇다면, 언제 이러한 자동 로그인 기능이 필요할까?
동기화를 할 때, 정기적으로 작업을 실행시킬 때
가령 정기적으로 동기화를 하고자 한다면 유용...


암호화 기술에는 대칭방식과 비대칭방식, 두 가지로 구분된다.
대칭방식의 예로, 데이터를 암호화할 때 비밀번호를 입력했다면 이를 다시 복호화할 때 암호화할 때 입력한 비밀번호와 동일한 비밀번호를 입력해야 하는 경우이다.
반면에 비대칭방식의 예로는 암호화할 때에는 비공개키로 암호화하고, 복호화할 때는 공개키로만 복호화할 수 있는 경우이다.
이러한 비대칭방식의 대표적인 기술이 RSA 기술이다.
이런 RSA 기술을 응용함으로써 정보기술이 빠르게 발전할 수 있었다.


SSH의 RSA 보안 기술
1. SSH Client(이하 클라이언트)가 SSH Server(이하 서버)에 접속허락을 요청한다.
2. 서버는 랜덤 키를 클라이언트에 보낸다.
3. 클라이언트는 받은 랜덤 키를 비공개키를 이용해 암호화한 후, 암호화한 파일을 서버에 보낸다.
4. 서버는 받은 암호화 파일을 공개키로 복호화한 후, 복호화한 파일이 클라이언트에게 보냈던 랜덤 키와 일치하면 접속을 허락한다.
==========================================================================================================================================================================================================================
; //앞의 명령어가 실패해도 다음 명령어가 실행
&& //앞의 명령어가 성공했을 때 다음 명령어가 실행
& //앞의 명령어를 백그라운드로 돌리고 동시에 뒤의 명령어를 실행
